<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><title>phpDox - Source of constants.php</title><link rel="stylesheet" type="text/css" href="../../css/style.css" media="screen"/><link rel="stylesheet" href="../../css/source.css"/><meta http-equiv="content-type" content="text/html; charset=utf-8"/></head><body><nav class="topnav"><ul><li><div class="logo"><span>/**</span>phpDox</div></li><li class="separator"><a href="../../index.xhtml">Overview</a></li><li class="separator"><a href="../../namespaces.xhtml">Namespaces</a></li><li><a href="../../classes.xhtml">Classes</a></li><li class="separator"><a href="../../source/index.xhtml">Source</a></li></ul></nav><div id="mainstage"><div class="box"><ul class="breadcrumb"><li><a href="../../index.xhtml">Overview</a></li><li class="separator"><a href="../../source/index.xhtml">Source</a></li></ul></div><h1>Source of file constants.php</h1><p>
                        Size: 4,322 Bytes - Last Modified: 2018-06-12T15:45:46+02:00</p><section><h2><small>/opt/lampp/htdocs/poc2/application/config/</small>constants.php</h2><table class="source"><tr><td class="no"><a class="anker" href="#line1">1</a><a class="anker" href="#line2">2</a><a class="anker" href="#line3">3</a><a class="anker" href="#line4">4</a><a class="anker" href="#line5">5</a><a class="anker" href="#line6">6</a><a class="anker" href="#line7">7</a><a class="anker" href="#line8">8</a><a class="anker" href="#line9">9</a><a class="anker" href="#line10">10</a><a class="anker" href="#line11">11</a><a class="anker" href="#line12">12</a><a class="anker" href="#line13">13</a><a class="anker" href="#line14">14</a><a class="anker" href="#line15">15</a><a class="anker" href="#line16">16</a><a class="anker" href="#line17">17</a><a class="anker" href="#line18">18</a><a class="anker" href="#line19">19</a><a class="anker" href="#line20">20</a><a class="anker" href="#line21">21</a><a class="anker" href="#line22">22</a><a class="anker" href="#line23">23</a><a class="anker" href="#line24">24</a><a class="anker" href="#line25">25</a><a class="anker" href="#line26">26</a><a class="anker" href="#line27">27</a><a class="anker" href="#line28">28</a><a class="anker" href="#line29">29</a><a class="anker" href="#line30">30</a><a class="anker" href="#line31">31</a><a class="anker" href="#line32">32</a><a class="anker" href="#line33">33</a><a class="anker" href="#line34">34</a><a class="anker" href="#line35">35</a><a class="anker" href="#line36">36</a><a class="anker" href="#line37">37</a><a class="anker" href="#line38">38</a><a class="anker" href="#line39">39</a><a class="anker" href="#line40">40</a><a class="anker" href="#line41">41</a><a class="anker" href="#line42">42</a><a class="anker" href="#line43">43</a><a class="anker" href="#line44">44</a><a class="anker" href="#line45">45</a><a class="anker" href="#line46">46</a><a class="anker" href="#line47">47</a><a class="anker" href="#line48">48</a><a class="anker" href="#line49">49</a><a class="anker" href="#line50">50</a><a class="anker" href="#line51">51</a><a class="anker" href="#line52">52</a><a class="anker" href="#line53">53</a><a class="anker" href="#line54">54</a><a class="anker" href="#line55">55</a><a class="anker" href="#line56">56</a><a class="anker" href="#line57">57</a><a class="anker" href="#line58">58</a><a class="anker" href="#line59">59</a><a class="anker" href="#line60">60</a><a class="anker" href="#line61">61</a><a class="anker" href="#line62">62</a><a class="anker" href="#line63">63</a><a class="anker" href="#line64">64</a><a class="anker" href="#line65">65</a><a class="anker" href="#line66">66</a><a class="anker" href="#line67">67</a><a class="anker" href="#line68">68</a><a class="anker" href="#line69">69</a><a class="anker" href="#line70">70</a><a class="anker" href="#line71">71</a><a class="anker" href="#line72">72</a><a class="anker" href="#line73">73</a><a class="anker" href="#line74">74</a><a class="anker" href="#line75">75</a><a class="anker" href="#line76">76</a><a class="anker" href="#line77">77</a><a class="anker" href="#line78">78</a><a class="anker" href="#line79">79</a><a class="anker" href="#line80">80</a><a class="anker" href="#line81">81</a><a class="anker" href="#line82">82</a><a class="anker" href="#line83">83</a><a class="anker" href="#line84">84</a><a class="anker" href="#line85">85</a><a class="anker" href="#line86">86</a></td><td class="line"><div id="line1"><pre><span class="token T_OPEN_TAG">&lt;?php</span></pre></div><div id="line2"><pre><span class="token T_STRING">defined</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'BASEPATH'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_LOGICAL_OR">OR</span><span class="token T_WHITESPACE"> </span><span class="token T_EXIT">exit</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'No direct script access allowed'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line3"><br/></div><div id="line4"><pre><span class="token T_COMMENT">/*</span></pre></div><div id="line5"><pre><span class="token T_COMMENT">|--------------------------------------------------------------------------</span></pre></div><div id="line6"><pre><span class="token T_COMMENT">| Display Debug backtrace</span></pre></div><div id="line7"><pre><span class="token T_COMMENT">|--------------------------------------------------------------------------</span></pre></div><div id="line8"><pre><span class="token T_COMMENT">|</span></pre></div><div id="line9"><pre><span class="token T_COMMENT">| If set to TRUE, a backtrace will be displayed along with php errors. If</span></pre></div><div id="line10"><pre><span class="token T_COMMENT">| error_reporting is disabled, the backtrace will not display, regardless</span></pre></div><div id="line11"><pre><span class="token T_COMMENT">| of this setting</span></pre></div><div id="line12"><pre><span class="token T_COMMENT">|</span></pre></div><div id="line13"><pre><span class="token T_COMMENT">*/</span></pre></div><div id="line14"><pre><span class="token T_STRING">defined</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'SHOW_DEBUG_BACKTRACE'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_LOGICAL_OR">OR</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">define</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'SHOW_DEBUG_BACKTRACE'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">TRUE</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line15"><br/></div><div id="line16"><pre><span class="token T_COMMENT">/*</span></pre></div><div id="line17"><pre><span class="token T_COMMENT">|--------------------------------------------------------------------------</span></pre></div><div id="line18"><pre><span class="token T_COMMENT">| File and Directory Modes</span></pre></div><div id="line19"><pre><span class="token T_COMMENT">|--------------------------------------------------------------------------</span></pre></div><div id="line20"><pre><span class="token T_COMMENT">|</span></pre></div><div id="line21"><pre><span class="token T_COMMENT">| These prefs are used when checking and setting modes when working</span></pre></div><div id="line22"><pre><span class="token T_COMMENT">| with the file system.  The defaults are fine on servers with proper</span></pre></div><div id="line23"><pre><span class="token T_COMMENT">| security, but you may wish (or even need) to change the values in</span></pre></div><div id="line24"><pre><span class="token T_COMMENT">| certain environments (Apache running a separate process for each</span></pre></div><div id="line25"><pre><span class="token T_COMMENT">| user, PHP under CGI with Apache suEXEC, etc.).  Octal values should</span></pre></div><div id="line26"><pre><span class="token T_COMMENT">| always be used to set the mode correctly.</span></pre></div><div id="line27"><pre><span class="token T_COMMENT">|</span></pre></div><div id="line28"><pre><span class="token T_COMMENT">*/</span></pre></div><div id="line29"><pre><span class="token T_STRING">defined</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'FILE_READ_MODE'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE">  </span><span class="token T_LOGICAL_OR">OR</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">define</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'FILE_READ_MODE'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0644</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line30"><pre><span class="token T_STRING">defined</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'FILE_WRITE_MODE'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_LOGICAL_OR">OR</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">define</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'FILE_WRITE_MODE'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0666</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line31"><pre><span class="token T_STRING">defined</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'DIR_READ_MODE'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE">   </span><span class="token T_LOGICAL_OR">OR</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">define</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'DIR_READ_MODE'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0755</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line32"><pre><span class="token T_STRING">defined</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'DIR_WRITE_MODE'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE">  </span><span class="token T_LOGICAL_OR">OR</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">define</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'DIR_WRITE_MODE'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0755</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line33"><br/></div><div id="line34"><pre><span class="token T_COMMENT">/*</span></pre></div><div id="line35"><pre><span class="token T_COMMENT">|--------------------------------------------------------------------------</span></pre></div><div id="line36"><pre><span class="token T_COMMENT">| File Stream Modes</span></pre></div><div id="line37"><pre><span class="token T_COMMENT">|--------------------------------------------------------------------------</span></pre></div><div id="line38"><pre><span class="token T_COMMENT">|</span></pre></div><div id="line39"><pre><span class="token T_COMMENT">| These modes are used when working with fopen()/popen()</span></pre></div><div id="line40"><pre><span class="token T_COMMENT">|</span></pre></div><div id="line41"><pre><span class="token T_COMMENT">*/</span></pre></div><div id="line42"><pre><span class="token T_STRING">defined</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'FOPEN_READ'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE">                           </span><span class="token T_LOGICAL_OR">OR</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">define</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'FOPEN_READ'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'rb'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line43"><pre><span class="token T_STRING">defined</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'FOPEN_READ_WRITE'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE">                     </span><span class="token T_LOGICAL_OR">OR</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">define</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'FOPEN_READ_WRITE'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'r+b'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line44"><pre><span class="token T_STRING">defined</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'FOPEN_WRITE_CREATE_DESTRUCTIVE'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE">       </span><span class="token T_LOGICAL_OR">OR</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">define</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'FOPEN_WRITE_CREATE_DESTRUCTIVE'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'wb'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE"> </span><span class="token T_COMMENT">// truncates existing file data, use with care</span></pre></div><div id="line45"><pre><span class="token T_STRING">defined</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'FOPEN_READ_WRITE_CREATE_DESTRUCTIVE'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE">  </span><span class="token T_LOGICAL_OR">OR</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">define</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'FOPEN_READ_WRITE_CREATE_DESTRUCTIVE'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'w+b'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE"> </span><span class="token T_COMMENT">// truncates existing file data, use with care</span></pre></div><div id="line46"><pre><span class="token T_STRING">defined</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'FOPEN_WRITE_CREATE'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE">                   </span><span class="token T_LOGICAL_OR">OR</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">define</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'FOPEN_WRITE_CREATE'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'ab'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line47"><pre><span class="token T_STRING">defined</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'FOPEN_READ_WRITE_CREATE'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE">              </span><span class="token T_LOGICAL_OR">OR</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">define</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'FOPEN_READ_WRITE_CREATE'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'a+b'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line48"><pre><span class="token T_STRING">defined</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'FOPEN_WRITE_CREATE_STRICT'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE">            </span><span class="token T_LOGICAL_OR">OR</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">define</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'FOPEN_WRITE_CREATE_STRICT'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'xb'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line49"><pre><span class="token T_STRING">defined</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'FOPEN_READ_WRITE_CREATE_STRICT'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE">       </span><span class="token T_LOGICAL_OR">OR</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">define</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'FOPEN_READ_WRITE_CREATE_STRICT'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'x+b'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line50"><br/></div><div id="line51"><pre><span class="token T_COMMENT">/*</span></pre></div><div id="line52"><pre><span class="token T_COMMENT">|--------------------------------------------------------------------------</span></pre></div><div id="line53"><pre><span class="token T_COMMENT">| Exit Status Codes</span></pre></div><div id="line54"><pre><span class="token T_COMMENT">|--------------------------------------------------------------------------</span></pre></div><div id="line55"><pre><span class="token T_COMMENT">|</span></pre></div><div id="line56"><pre><span class="token T_COMMENT">| Used to indicate the conditions under which the script is exit()ing.</span></pre></div><div id="line57"><pre><span class="token T_COMMENT">| While there is no universal standard for error codes, there are some</span></pre></div><div id="line58"><pre><span class="token T_COMMENT">| broad conventions.  Three such conventions are mentioned below, for</span></pre></div><div id="line59"><pre><span class="token T_COMMENT">| those who wish to make use of them.  The CodeIgniter defaults were</span></pre></div><div id="line60"><pre><span class="token T_COMMENT">| chosen for the least overlap with these conventions, while still</span></pre></div><div id="line61"><pre><span class="token T_COMMENT">| leaving room for others to be defined in future versions and user</span></pre></div><div id="line62"><pre><span class="token T_COMMENT">| applications.</span></pre></div><div id="line63"><pre><span class="token T_COMMENT">|</span></pre></div><div id="line64"><pre><span class="token T_COMMENT">| The three main conventions used for determining exit status codes</span></pre></div><div id="line65"><pre><span class="token T_COMMENT">| are as follows:</span></pre></div><div id="line66"><pre><span class="token T_COMMENT">|</span></pre></div><div id="line67"><pre><span class="token T_COMMENT">|    Standard C/C++ Library (stdlibc):</span></pre></div><div id="line68"><pre><span class="token T_COMMENT">|       http://www.gnu.org/software/libc/manual/html_node/Exit-Status.html</span></pre></div><div id="line69"><pre><span class="token T_COMMENT">|       (This link also contains other GNU-specific conventions)</span></pre></div><div id="line70"><pre><span class="token T_COMMENT">|    BSD sysexits.h:</span></pre></div><div id="line71"><pre><span class="token T_COMMENT">|       http://www.gsp.com/cgi-bin/man.cgi?section=3&amp;topic=sysexits</span></pre></div><div id="line72"><pre><span class="token T_COMMENT">|    Bash scripting:</span></pre></div><div id="line73"><pre><span class="token T_COMMENT">|       http://tldp.org/LDP/abs/html/exitcodes.html</span></pre></div><div id="line74"><pre><span class="token T_COMMENT">|</span></pre></div><div id="line75"><pre><span class="token T_COMMENT">*/</span></pre></div><div id="line76"><pre><span class="token T_STRING">defined</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'EXIT_SUCCESS'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE">        </span><span class="token T_LOGICAL_OR">OR</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">define</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'EXIT_SUCCESS'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE"> </span><span class="token T_COMMENT">// no errors</span></pre></div><div id="line77"><pre><span class="token T_STRING">defined</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'EXIT_ERROR'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE">          </span><span class="token T_LOGICAL_OR">OR</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">define</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'EXIT_ERROR'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">1</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE"> </span><span class="token T_COMMENT">// generic error</span></pre></div><div id="line78"><pre><span class="token T_STRING">defined</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'EXIT_CONFIG'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE">         </span><span class="token T_LOGICAL_OR">OR</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">define</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'EXIT_CONFIG'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">3</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE"> </span><span class="token T_COMMENT">// configuration error</span></pre></div><div id="line79"><pre><span class="token T_STRING">defined</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'EXIT_UNKNOWN_FILE'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE">   </span><span class="token T_LOGICAL_OR">OR</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">define</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'EXIT_UNKNOWN_FILE'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">4</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE"> </span><span class="token T_COMMENT">// file not found</span></pre></div><div id="line80"><pre><span class="token T_STRING">defined</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'EXIT_UNKNOWN_CLASS'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE">  </span><span class="token T_LOGICAL_OR">OR</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">define</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'EXIT_UNKNOWN_CLASS'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">5</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE"> </span><span class="token T_COMMENT">// unknown class</span></pre></div><div id="line81"><pre><span class="token T_STRING">defined</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'EXIT_UNKNOWN_METHOD'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_LOGICAL_OR">OR</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">define</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'EXIT_UNKNOWN_METHOD'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">6</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE"> </span><span class="token T_COMMENT">// unknown class member</span></pre></div><div id="line82"><pre><span class="token T_STRING">defined</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'EXIT_USER_INPUT'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE">     </span><span class="token T_LOGICAL_OR">OR</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">define</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'EXIT_USER_INPUT'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">7</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE"> </span><span class="token T_COMMENT">// invalid user input</span></pre></div><div id="line83"><pre><span class="token T_STRING">defined</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'EXIT_DATABASE'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE">       </span><span class="token T_LOGICAL_OR">OR</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">define</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'EXIT_DATABASE'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">8</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE"> </span><span class="token T_COMMENT">// database error</span></pre></div><div id="line84"><pre><span class="token T_STRING">defined</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'EXIT__AUTO_MIN'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE">      </span><span class="token T_LOGICAL_OR">OR</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">define</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'EXIT__AUTO_MIN'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">9</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE"> </span><span class="token T_COMMENT">// lowest automatically-assigned error code</span></pre></div><div id="line85"><pre><span class="token T_STRING">defined</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'EXIT__AUTO_MAX'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE">      </span><span class="token T_LOGICAL_OR">OR</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">define</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'EXIT__AUTO_MAX'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">125</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span><span class="token T_WHITESPACE"> </span><span class="token T_COMMENT">// highest automatically-assigned error code</span></pre></div><div id="line86"><br/></div></td></tr></table></section></div><footer><span>Generated using phpDox 0.11.0-dev - Copyright (C) 2010 - 2019 by Arne Blankerts and Contributors</span></footer></body></html>
