<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/opt/lampp/htdocs/poc2/application/controllers/testing/model" file="User_tdd.php" realpath="/opt/lampp/htdocs/poc2/application/controllers/testing/model/User_tdd.php" size="3778" time="2019-02-17T21:57:18+01:00" unixtime="1550437038" sha1="bcf67b5376092d55deba824ba2f860f43632386d" relative="controllers/testing/model/User_tdd.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2"/>
  <line no="3">
    <token name="T_STRING">defined</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'BASEPATH'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LOGICAL_OR">OR</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_EXIT">exit</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'No direct script access allowed'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4"/>
  <line no="5">
    <token name="T_COMMENT">// TEST PATH :: index.php/testing/model/User_tdd</token>
  </line>
  <line no="6"/>
  <line no="7">
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">User_tdd</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_EXTENDS">extends</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">CI_Controller</token>
  </line>
  <line no="8">
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="9">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">__construct</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="10">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="11">
    <token name="T_WHITESPACE">        </token>
    <token name="T_STRING">parent</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">__construct</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="12">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">load</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">library</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"unit_test"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="13">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="14">
    <token name="T_WHITESPACE">    </token>
  </line>
  <line no="15">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">index</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="16">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">/***** TEST CASE *****/</token>
  </line>
  <line no="17"/>
  <line no="18">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$firstname</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"firstname"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="19">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$lastname</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"lastname"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="20">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$username</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"testuser"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="21">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$email</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"unittest@mail.com"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="22">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$pass</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_STRING">sha1</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"pass"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="23"/>
  <line no="24">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">/*********************/</token>
  </line>
  <line no="25"/>
  <line no="26">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$test_name</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Checking the Test Case does not exist prior to registering"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="27">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$test0</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">checkingUserDoesNotExist</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$username</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="28">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$expected_result</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="29">
    <token name="T_WHITESPACE">        </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">unit</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">run</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test0</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$expected_result</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$test_name</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$notes</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"relies on unique username"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="30"/>
  <line no="31">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$test_name</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Registering with VALID details checking insert "</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="32">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$test1</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">registrationWithValidDetails</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$firstname</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$lastname</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$username</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$email</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$pass</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="33">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$expected_result</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
  </line>
  <line no="34">
    <token name="T_WHITESPACE">        </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">unit</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">run</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test1</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$expected_result</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$test_name</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$notes</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Validation is done within the User Controller and Api"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="35"/>
  <line no="36">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$test_name</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Registering with VALID details checking user can log in  "</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="37">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$test2</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">registrationThenCheckingUserLogin</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$firstname</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$lastname</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$username</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$email</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$pass</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="38">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$expected_result</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
  </line>
  <line no="39">
    <token name="T_WHITESPACE">        </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">unit</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">run</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test2</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$expected_result</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$test_name</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$notes</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Validation is done within the User Controller and Api"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="40">
    <token name="T_WHITESPACE">        </token>
  </line>
  <line no="41">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$test_name</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Assert that User registration inserts profile tuple into the profile table"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="42">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$test3</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">assertThatProfileExists</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$firstname</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$lastname</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$username</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$email</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$pass</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="43">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$expected_result</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
  </line>
  <line no="44">
    <token name="T_WHITESPACE">        </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">unit</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">run</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test3</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$expected_result</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$test_name</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$notes</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Profiles and users have 1-1 relationship; must have profile on registration"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="45"/>
  <line no="46">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$test_name</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Cleaning up the user entry for test re-run"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="47">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$test4</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">cleanupRegisteredAccounts</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$username</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$lastname</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="48">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$expected_result</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="49">
    <token name="T_WHITESPACE">        </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">unit</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">run</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$test4</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$expected_result</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$test_name</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$notes</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="50">
    <token name="T_WHITESPACE">        </token>
  </line>
  <line no="51">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="52"/>
  <line no="53">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="54">
    <token name="T_DOC_COMMENT">     * This test checks that the test case does not already exist prior to testing</token>
  </line>
  <line no="55">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="56">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">checkingUserDoesNotExist</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$username</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="57">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="58">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$success</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">user_model</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">check_exists</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$username</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="59">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="60">
    <token name="T_WHITESPACE">    </token>
  </line>
  <line no="61">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="62">
    <token name="T_DOC_COMMENT">     * This test checks that creating a user with valid details returns true when inserting the data</token>
  </line>
  <line no="63">
    <token name="T_DOC_COMMENT">     * into the database.</token>
  </line>
  <line no="64">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="65">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">registrationWithValidDetails</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$fname</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$lname</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$username</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$email</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$enc_pass</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="66">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="67">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_VARIABLE">$success</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">user_model</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">create_user_and_profile</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$username</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$email</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$enc_pass</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$fname</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$lname</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
  </line>
  <line no="68">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="69"/>
  <line no="70">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="71">
    <token name="T_DOC_COMMENT">     * This test checks that creating a user with valid details then allows the same user to log in via</token>
  </line>
  <line no="72">
    <token name="T_DOC_COMMENT">     * the user model.</token>
  </line>
  <line no="73">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="74">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">registrationThenCheckingUserLogin</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$fname</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$lname</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$username</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$email</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$enc_pass</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="75">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="76">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">user_model</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">create_user_and_profile</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$username</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$email</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$enc_pass</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$fname</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$lname</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="77">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$success</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">user_model</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">login</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$email</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$enc_pass</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="78">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="79"/>
  <line no="80">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">assertThatProfileExists</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$firstname</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$lastname</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$username</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$email</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$pass</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="81">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$user_id</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">user_model</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">create_user_and_profile</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$username</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$email</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$pass</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$firstname</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$lastname</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$test_flag</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_STRING">TRUE</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="82">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$profile</token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">profile_model</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">read_profile</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$user_id</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="83">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$profile</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'first_name'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_IS_EQUAL">==</token>
    <token name="T_VARIABLE">$firstname</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$profile</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'last_name'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_IS_EQUAL">==</token>
    <token name="T_VARIABLE">$lastname</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="84">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="85"/>
  <line no="86">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="87">
    <token name="T_DOC_COMMENT">     * This function removes the account created in the test run to allow test re-runs.</token>
  </line>
  <line no="88">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="89">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">cleanupRegisteredAccounts</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$username</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$last_name</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="90">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="91">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">user_model</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">delete_user</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$username</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_VARIABLE">$last_name</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="92">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="93"/>
  <line no="94">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="95"/>
  <line no="96">
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
</source>
