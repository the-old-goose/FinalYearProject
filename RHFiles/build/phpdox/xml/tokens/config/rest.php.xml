<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/opt/lampp/htdocs/poc2/application/config" file="rest.php" realpath="/opt/lampp/htdocs/poc2/application/config/rest.php" size="20758" time="2018-11-09T13:33:01+01:00" unixtime="1541766781" sha1="cf5a819697179b5f5273e4693596ec472fe242f7" relative="config/rest.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2"/>
  <line no="3">
    <token name="T_STRING">defined</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'BASEPATH'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LOGICAL_OR">OR</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_EXIT">exit</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'No direct script access allowed'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4"/>
  <line no="5">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="6">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="7">
    <token name="T_COMMENT">| HTTP protocol</token>
  </line>
  <line no="8">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="9">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="10">
    <token name="T_COMMENT">| Set to force the use of HTTPS for REST API calls</token>
  </line>
  <line no="11">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="12">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="13">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'force_https'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">FALSE</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="14"/>
  <line no="15">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="16">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="17">
    <token name="T_COMMENT">| REST Output Format</token>
  </line>
  <line no="18">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="19">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="20">
    <token name="T_COMMENT">| The default format of the response</token>
  </line>
  <line no="21">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="22">
    <token name="T_COMMENT">| 'array':      Array data structure</token>
  </line>
  <line no="23">
    <token name="T_COMMENT">| 'csv':        Comma separated file</token>
  </line>
  <line no="24">
    <token name="T_COMMENT">| 'json':       Uses json_encode(). Note: If a GET query string</token>
  </line>
  <line no="25">
    <token name="T_COMMENT">|               called 'callback' is passed, then jsonp will be returned</token>
  </line>
  <line no="26">
    <token name="T_COMMENT">| 'html'        HTML using the table library in CodeIgniter</token>
  </line>
  <line no="27">
    <token name="T_COMMENT">| 'php':        Uses var_export()</token>
  </line>
  <line no="28">
    <token name="T_COMMENT">| 'serialized':  Uses serialize()</token>
  </line>
  <line no="29">
    <token name="T_COMMENT">| 'xml':        Uses simplexml_load_string()</token>
  </line>
  <line no="30">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="31">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="32">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'rest_default_format'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'json'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="33"/>
  <line no="34">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="35">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="36">
    <token name="T_COMMENT">| REST Supported Output Formats</token>
  </line>
  <line no="37">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="38">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="39">
    <token name="T_COMMENT">| The following setting contains a list of the supported/allowed formats.</token>
  </line>
  <line no="40">
    <token name="T_COMMENT">| You may remove those formats that you don't want to use.</token>
  </line>
  <line no="41">
    <token name="T_COMMENT">| If the default format $config['rest_default_format'] is missing within</token>
  </line>
  <line no="42">
    <token name="T_COMMENT">| $config['rest_supported_formats'], it will be added silently during</token>
  </line>
  <line no="43">
    <token name="T_COMMENT">| REST_Controller initialization.</token>
  </line>
  <line no="44">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="45">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="46">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'rest_supported_formats'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
  </line>
  <line no="47">
    <token name="T_WHITESPACE">    </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'json'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="48">
    <token name="T_WHITESPACE">    </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'array'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="49">
    <token name="T_WHITESPACE">    </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'csv'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="50">
    <token name="T_WHITESPACE">    </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'html'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="51">
    <token name="T_WHITESPACE">    </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'jsonp'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="52">
    <token name="T_WHITESPACE">    </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'php'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="53">
    <token name="T_WHITESPACE">    </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'serialized'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="54">
    <token name="T_WHITESPACE">    </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'xml'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="55">
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="56"/>
  <line no="57">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="58">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="59">
    <token name="T_COMMENT">| REST Status Field Name</token>
  </line>
  <line no="60">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="61">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="62">
    <token name="T_COMMENT">| The field name for the status inside the response</token>
  </line>
  <line no="63">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="64">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="65">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'rest_status_field_name'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'status'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="66"/>
  <line no="67">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="68">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="69">
    <token name="T_COMMENT">| REST Message Field Name</token>
  </line>
  <line no="70">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="71">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="72">
    <token name="T_COMMENT">| The field name for the message inside the response</token>
  </line>
  <line no="73">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="74">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="75">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'rest_message_field_name'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'error'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="76"/>
  <line no="77">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="78">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="79">
    <token name="T_COMMENT">| Enable Emulate Request</token>
  </line>
  <line no="80">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="81">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="82">
    <token name="T_COMMENT">| Should we enable emulation of the request (e.g. used in Mootools request)</token>
  </line>
  <line no="83">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="84">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="85">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'enable_emulate_request'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">TRUE</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="86"/>
  <line no="87">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="88">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="89">
    <token name="T_COMMENT">| REST Realm</token>
  </line>
  <line no="90">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="91">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="92">
    <token name="T_COMMENT">| Name of the password protected REST API displayed on login dialogs</token>
  </line>
  <line no="93">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="94">
    <token name="T_COMMENT">| e.g: My Secret REST API</token>
  </line>
  <line no="95">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="96">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="97">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'rest_realm'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'REST API'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="98"/>
  <line no="99">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="100">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="101">
    <token name="T_COMMENT">| REST Login</token>
  </line>
  <line no="102">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="103">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="104">
    <token name="T_COMMENT">| Set to specify the REST API requires to be logged in</token>
  </line>
  <line no="105">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="106">
    <token name="T_COMMENT">| FALSE     No login required</token>
  </line>
  <line no="107">
    <token name="T_COMMENT">| 'basic'   Unsecured login</token>
  </line>
  <line no="108">
    <token name="T_COMMENT">| 'digest'  More secured login</token>
  </line>
  <line no="109">
    <token name="T_COMMENT">| 'session' Check for a PHP session variable. See 'auth_source' to set the</token>
  </line>
  <line no="110">
    <token name="T_COMMENT">|           authorization key</token>
  </line>
  <line no="111">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="112">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="113">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'rest_auth'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">FALSE</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="114"/>
  <line no="115">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="116">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="117">
    <token name="T_COMMENT">| REST Login Source</token>
  </line>
  <line no="118">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="119">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="120">
    <token name="T_COMMENT">| Is login required and if so, the user store to use</token>
  </line>
  <line no="121">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="122">
    <token name="T_COMMENT">| ''        Use config based users or wildcard testing</token>
  </line>
  <line no="123">
    <token name="T_COMMENT">| 'ldap'    Use LDAP authentication</token>
  </line>
  <line no="124">
    <token name="T_COMMENT">| 'library' Use a authentication library</token>
  </line>
  <line no="125">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="126">
    <token name="T_COMMENT">| Note: If 'rest_auth' is set to 'session' then change 'auth_source' to the name of the session variable</token>
  </line>
  <line no="127">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="128">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="129">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'auth_source'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ldap'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="130"/>
  <line no="131">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="132">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="133">
    <token name="T_COMMENT">| Allow Authentication and API Keys</token>
  </line>
  <line no="134">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="135">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="136">
    <token name="T_COMMENT">| Where you wish to have Basic, Digest or Session login, but also want to use API Keys (for limiting</token>
  </line>
  <line no="137">
    <token name="T_COMMENT">| requests etc), set to TRUE;</token>
  </line>
  <line no="138">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="139">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="140">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'allow_auth_and_keys'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">TRUE</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="141">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'strict_api_and_auth'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">TRUE</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// force the use of both api and auth before a valid api request is made</token>
  </line>
  <line no="142"/>
  <line no="143">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="144">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="145">
    <token name="T_COMMENT">| REST Login Class and Function</token>
  </line>
  <line no="146">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="147">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="148">
    <token name="T_COMMENT">| If library authentication is used define the class and function name</token>
  </line>
  <line no="149">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="150">
    <token name="T_COMMENT">| The function should accept two parameters: class-&gt;function($username, $password)</token>
  </line>
  <line no="151">
    <token name="T_COMMENT">| In other cases override the function _perform_library_auth in your controller</token>
  </line>
  <line no="152">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="153">
    <token name="T_COMMENT">| For digest authentication the library function should return already a stored</token>
  </line>
  <line no="154">
    <token name="T_COMMENT">| md5(username:restrealm:password) for that username</token>
  </line>
  <line no="155">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="156">
    <token name="T_COMMENT">| e.g: md5('admin:REST API:1234') = '1e957ebc35631ab22d5bd6526bd14ea2'</token>
  </line>
  <line no="157">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="158">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="159">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'auth_library_class'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="160">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'auth_library_function'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="161"/>
  <line no="162">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="163">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="164">
    <token name="T_COMMENT">| Override auth types for specific class/method</token>
  </line>
  <line no="165">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="166">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="167">
    <token name="T_COMMENT">| Set specific authentication types for methods within a class (controller)</token>
  </line>
  <line no="168">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="169">
    <token name="T_COMMENT">| Set as many config entries as needed.  Any methods not set will use the default 'rest_auth' config value.</token>
  </line>
  <line no="170">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="171">
    <token name="T_COMMENT">| e.g:</token>
  </line>
  <line no="172">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="173">
    <token name="T_COMMENT">|           $config['auth_override_class_method']['deals']['view'] = 'none';</token>
  </line>
  <line no="174">
    <token name="T_COMMENT">|           $config['auth_override_class_method']['deals']['insert'] = 'digest';</token>
  </line>
  <line no="175">
    <token name="T_COMMENT">|           $config['auth_override_class_method']['accounts']['user'] = 'basic';</token>
  </line>
  <line no="176">
    <token name="T_COMMENT">|           $config['auth_override_class_method']['dashboard']['*'] = 'none|digest|basic';</token>
  </line>
  <line no="177">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="178">
    <token name="T_COMMENT">| Here 'deals', 'accounts' and 'dashboard' are controller names, 'view', 'insert' and 'user' are methods within. An asterisk may also be used to specify an authentication method for an entire classes methods. Ex: $config['auth_override_class_method']['dashboard']['*'] = 'basic'; (NOTE: leave off the '_get' or '_post' from the end of the method name)</token>
  </line>
  <line no="179">
    <token name="T_COMMENT">| Acceptable values are; 'none', 'digest' and 'basic'.</token>
  </line>
  <line no="180">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="181">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="182">
    <token name="T_COMMENT">// $config['auth_override_class_method']['deals']['view'] = 'none';</token>
  </line>
  <line no="183">
    <token name="T_COMMENT">// $config['auth_override_class_method']['deals']['insert'] = 'digest';</token>
  </line>
  <line no="184">
    <token name="T_COMMENT">// $config['auth_override_class_method']['accounts']['user'] = 'basic';</token>
  </line>
  <line no="185">
    <token name="T_COMMENT">// $config['auth_override_class_method']['dashboard']['*'] = 'basic';</token>
  </line>
  <line no="186"/>
  <line no="187"/>
  <line no="188">
    <token name="T_COMMENT">// ---Uncomment list line for the wildard unit test</token>
  </line>
  <line no="189">
    <token name="T_COMMENT">// $config['auth_override_class_method']['wildcard_test_cases']['*'] = 'basic';</token>
  </line>
  <line no="190"/>
  <line no="191">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="192">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="193">
    <token name="T_COMMENT">| Override auth types for specific 'class/method/HTTP method'</token>
  </line>
  <line no="194">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="195">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="196">
    <token name="T_COMMENT">| example:</token>
  </line>
  <line no="197">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="198">
    <token name="T_COMMENT">|            $config['auth_override_class_method_http']['deals']['view']['get'] = 'none';</token>
  </line>
  <line no="199">
    <token name="T_COMMENT">|            $config['auth_override_class_method_http']['deals']['insert']['post'] = 'none';</token>
  </line>
  <line no="200">
    <token name="T_COMMENT">|            $config['auth_override_class_method_http']['deals']['*']['options'] = 'none';</token>
  </line>
  <line no="201">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="202"/>
  <line no="203">
    <token name="T_COMMENT">// ---Uncomment list line for the wildard unit test</token>
  </line>
  <line no="204">
    <token name="T_COMMENT">// $config['auth_override_class_method_http']['wildcard_test_cases']['*']['options'] = 'basic';</token>
  </line>
  <line no="205"/>
  <line no="206">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="207">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="208">
    <token name="T_COMMENT">| REST Login Usernames</token>
  </line>
  <line no="209">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="210">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="211">
    <token name="T_COMMENT">| Array of usernames and passwords for login, if ldap is configured this is ignored</token>
  </line>
  <line no="212">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="213">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="214">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'rest_valid_logins'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'admin'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'1234'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="215"/>
  <line no="216">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="217">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="218">
    <token name="T_COMMENT">| Global IP White-listing</token>
  </line>
  <line no="219">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="220">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="221">
    <token name="T_COMMENT">| Limit connections to your REST server to White-listed IP addresses</token>
  </line>
  <line no="222">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="223">
    <token name="T_COMMENT">| Usage:</token>
  </line>
  <line no="224">
    <token name="T_COMMENT">| 1. Set to TRUE and select an auth option for extreme security (client's IP</token>
  </line>
  <line no="225">
    <token name="T_COMMENT">|    address must be in white-list and they must also log in)</token>
  </line>
  <line no="226">
    <token name="T_COMMENT">| 2. Set to TRUE with auth set to FALSE to allow White-listed IPs access with no login</token>
  </line>
  <line no="227">
    <token name="T_COMMENT">| 3. Set to FALSE but set 'auth_override_class_method' to 'white-list' to</token>
  </line>
  <line no="228">
    <token name="T_COMMENT">|    restrict certain methods to IPs in your white-list</token>
  </line>
  <line no="229">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="230">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="231">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'rest_ip_whitelist_enabled'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">FALSE</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="232"/>
  <line no="233">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="234">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="235">
    <token name="T_COMMENT">| REST Handle Exceptions</token>
  </line>
  <line no="236">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="237">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="238">
    <token name="T_COMMENT">| Handle exceptions caused by the controller</token>
  </line>
  <line no="239">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="240">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="241">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'rest_handle_exceptions'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">TRUE</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="242"/>
  <line no="243">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="244">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="245">
    <token name="T_COMMENT">| REST IP White-list</token>
  </line>
  <line no="246">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="247">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="248">
    <token name="T_COMMENT">| Limit connections to your REST server with a comma separated</token>
  </line>
  <line no="249">
    <token name="T_COMMENT">| list of IP addresses</token>
  </line>
  <line no="250">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="251">
    <token name="T_COMMENT">| e.g: '123.456.789.0, 987.654.32.1'</token>
  </line>
  <line no="252">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="253">
    <token name="T_COMMENT">| 127.0.0.1 and 0.0.0.0 are allowed by default</token>
  </line>
  <line no="254">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="255">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="256">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'rest_ip_whitelist'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="257"/>
  <line no="258">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="259">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="260">
    <token name="T_COMMENT">| Global IP Blacklisting</token>
  </line>
  <line no="261">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="262">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="263">
    <token name="T_COMMENT">| Prevent connections to the REST server from blacklisted IP addresses</token>
  </line>
  <line no="264">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="265">
    <token name="T_COMMENT">| Usage:</token>
  </line>
  <line no="266">
    <token name="T_COMMENT">| 1. Set to TRUE and add any IP address to 'rest_ip_blacklist'</token>
  </line>
  <line no="267">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="268">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="269">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'rest_ip_blacklist_enabled'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">FALSE</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="270"/>
  <line no="271">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="272">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="273">
    <token name="T_COMMENT">| REST IP Blacklist</token>
  </line>
  <line no="274">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="275">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="276">
    <token name="T_COMMENT">| Prevent connections from the following IP addresses</token>
  </line>
  <line no="277">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="278">
    <token name="T_COMMENT">| e.g: '123.456.789.0, 987.654.32.1'</token>
  </line>
  <line no="279">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="280">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="281">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'rest_ip_blacklist'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="282"/>
  <line no="283">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="284">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="285">
    <token name="T_COMMENT">| REST Database Group</token>
  </line>
  <line no="286">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="287">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="288">
    <token name="T_COMMENT">| Connect to a database group for keys, logging, etc. It will only connect</token>
  </line>
  <line no="289">
    <token name="T_COMMENT">| if you have any of these features enabled</token>
  </line>
  <line no="290">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="291">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="292">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'rest_database_group'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'default'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="293"/>
  <line no="294">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="295">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="296">
    <token name="T_COMMENT">| REST API Keys Table Name</token>
  </line>
  <line no="297">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="298">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="299">
    <token name="T_COMMENT">| The table name in your database that stores API keys</token>
  </line>
  <line no="300">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="301">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="302">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'rest_keys_table'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'keys'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="303"/>
  <line no="304">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="305">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="306">
    <token name="T_COMMENT">| REST Enable Keys</token>
  </line>
  <line no="307">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="308">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="309">
    <token name="T_COMMENT">| When set to TRUE, the REST API will look for a column name called 'key'.</token>
  </line>
  <line no="310">
    <token name="T_COMMENT">| If no key is provided, the request will result in an error. To override the</token>
  </line>
  <line no="311">
    <token name="T_COMMENT">| column name see 'rest_key_column'</token>
  </line>
  <line no="312">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="313">
    <token name="T_COMMENT">| Default table schema:</token>
  </line>
  <line no="314">
    <token name="T_COMMENT">|   CREATE TABLE `keys` (</token>
  </line>
  <line no="315">
    <token name="T_COMMENT">|       `id` INT(11) NOT NULL AUTO_INCREMENT,</token>
  </line>
  <line no="316">
    <token name="T_COMMENT">|       `user_id` INT(11) NOT NULL,</token>
  </line>
  <line no="317">
    <token name="T_COMMENT">|       `key` VARCHAR(40) NOT NULL,</token>
  </line>
  <line no="318">
    <token name="T_COMMENT">|       `level` INT(2) NOT NULL,</token>
  </line>
  <line no="319">
    <token name="T_COMMENT">|       `ignore_limits` TINYINT(1) NOT NULL DEFAULT '0',</token>
  </line>
  <line no="320">
    <token name="T_COMMENT">|       `is_private_key` TINYINT(1)  NOT NULL DEFAULT '0',</token>
  </line>
  <line no="321">
    <token name="T_COMMENT">|       `ip_addresses` TEXT NULL DEFAULT NULL,</token>
  </line>
  <line no="322">
    <token name="T_COMMENT">|       `date_created` INT(11) NOT NULL,</token>
  </line>
  <line no="323">
    <token name="T_COMMENT">|       PRIMARY KEY (`id`)</token>
  </line>
  <line no="324">
    <token name="T_COMMENT">|   ) ENGINE=InnoDB DEFAULT CHARSET=utf8;</token>
  </line>
  <line no="325">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="326">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="327">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'rest_enable_keys'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">FALSE</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="328"/>
  <line no="329">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="330">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="331">
    <token name="T_COMMENT">| REST Table Key Column Name</token>
  </line>
  <line no="332">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="333">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="334">
    <token name="T_COMMENT">| If not using the default table schema in 'rest_enable_keys', specify the</token>
  </line>
  <line no="335">
    <token name="T_COMMENT">| column name to match e.g. my_key</token>
  </line>
  <line no="336">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="337">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="338">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'rest_key_column'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'key'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="339"/>
  <line no="340">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="341">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="342">
    <token name="T_COMMENT">| REST API Limits method</token>
  </line>
  <line no="343">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="344">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="345">
    <token name="T_COMMENT">| Specify the method used to limit the API calls</token>
  </line>
  <line no="346">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="347">
    <token name="T_COMMENT">| Available methods are :</token>
  </line>
  <line no="348">
    <token name="T_COMMENT">| $config['rest_limits_method'] = 'IP_ADDRESS'; // Put a limit per ip address</token>
  </line>
  <line no="349">
    <token name="T_COMMENT">| $config['rest_limits_method'] = 'API_KEY'; // Put a limit per api key</token>
  </line>
  <line no="350">
    <token name="T_COMMENT">| $config['rest_limits_method'] = 'METHOD_NAME'; // Put a limit on method calls</token>
  </line>
  <line no="351">
    <token name="T_COMMENT">| $config['rest_limits_method'] = 'ROUTED_URL';  // Put a limit on the routed URL</token>
  </line>
  <line no="352">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="353">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="354">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'rest_limits_method'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ROUTED_URL'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="355"/>
  <line no="356">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="357">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="358">
    <token name="T_COMMENT">| REST Key Length</token>
  </line>
  <line no="359">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="360">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="361">
    <token name="T_COMMENT">| Length of the created keys. Check your default database schema on the</token>
  </line>
  <line no="362">
    <token name="T_COMMENT">| maximum length allowed</token>
  </line>
  <line no="363">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="364">
    <token name="T_COMMENT">| Note: The maximum length is 40</token>
  </line>
  <line no="365">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="366">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="367">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'rest_key_length'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">40</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="368"/>
  <line no="369">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="370">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="371">
    <token name="T_COMMENT">| REST API Key Variable</token>
  </line>
  <line no="372">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="373">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="374">
    <token name="T_COMMENT">| Custom header to specify the API key</token>
  </line>
  <line no="375"/>
  <line no="376">
    <token name="T_COMMENT">| Note: Custom headers with the X- prefix are deprecated as of</token>
  </line>
  <line no="377">
    <token name="T_COMMENT">| 2012/06/12. See RFC 6648 specification for more details</token>
  </line>
  <line no="378">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="379">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="380">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'rest_key_name'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'X-API-KEY'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="381"/>
  <line no="382">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="383">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="384">
    <token name="T_COMMENT">| REST Enable Logging</token>
  </line>
  <line no="385">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="386">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="387">
    <token name="T_COMMENT">| When set to TRUE, the REST API will log actions based on the column names 'key', 'date',</token>
  </line>
  <line no="388">
    <token name="T_COMMENT">| 'time' and 'ip_address'. This is a general rule that can be overridden in the</token>
  </line>
  <line no="389">
    <token name="T_COMMENT">| $this-&gt;method array for each controller</token>
  </line>
  <line no="390">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="391">
    <token name="T_COMMENT">| Default table schema:</token>
  </line>
  <line no="392">
    <token name="T_COMMENT">|   CREATE TABLE `logs` (</token>
  </line>
  <line no="393">
    <token name="T_COMMENT">|       `id` INT(11) NOT NULL AUTO_INCREMENT,</token>
  </line>
  <line no="394">
    <token name="T_COMMENT">|       `uri` VARCHAR(255) NOT NULL,</token>
  </line>
  <line no="395">
    <token name="T_COMMENT">|       `method` VARCHAR(6) NOT NULL,</token>
  </line>
  <line no="396">
    <token name="T_COMMENT">|       `params` TEXT DEFAULT NULL,</token>
  </line>
  <line no="397">
    <token name="T_COMMENT">|       `api_key` VARCHAR(40) NOT NULL,</token>
  </line>
  <line no="398">
    <token name="T_COMMENT">|       `ip_address` VARCHAR(45) NOT NULL,</token>
  </line>
  <line no="399">
    <token name="T_COMMENT">|       `time` INT(11) NOT NULL,</token>
  </line>
  <line no="400">
    <token name="T_COMMENT">|       `rtime` FLOAT DEFAULT NULL,</token>
  </line>
  <line no="401">
    <token name="T_COMMENT">|       `authorized` VARCHAR(1) NOT NULL,</token>
  </line>
  <line no="402">
    <token name="T_COMMENT">|       `response_code` smallint(3) DEFAULT '0',</token>
  </line>
  <line no="403">
    <token name="T_COMMENT">|       PRIMARY KEY (`id`)</token>
  </line>
  <line no="404">
    <token name="T_COMMENT">|   ) ENGINE=InnoDB DEFAULT CHARSET=utf8;</token>
  </line>
  <line no="405">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="406">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="407">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'rest_enable_logging'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">FALSE</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="408"/>
  <line no="409">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="410">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="411">
    <token name="T_COMMENT">| REST API Logs Table Name</token>
  </line>
  <line no="412">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="413">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="414">
    <token name="T_COMMENT">| If not using the default table schema in 'rest_enable_logging', specify the</token>
  </line>
  <line no="415">
    <token name="T_COMMENT">| table name to match e.g. my_logs</token>
  </line>
  <line no="416">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="417">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="418">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'rest_logs_table'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'logs'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="419"/>
  <line no="420">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="421">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="422">
    <token name="T_COMMENT">| REST Method Access Control</token>
  </line>
  <line no="423">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="424">
    <token name="T_COMMENT">| When set to TRUE, the REST API will check the access table to see if</token>
  </line>
  <line no="425">
    <token name="T_COMMENT">| the API key can access that controller. 'rest_enable_keys' must be enabled</token>
  </line>
  <line no="426">
    <token name="T_COMMENT">| to use this</token>
  </line>
  <line no="427">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="428">
    <token name="T_COMMENT">| Default table schema:</token>
  </line>
  <line no="429">
    <token name="T_COMMENT">|   CREATE TABLE `access` (</token>
  </line>
  <line no="430">
    <token name="T_COMMENT">|       `id` INT(11) unsigned NOT NULL AUTO_INCREMENT,</token>
  </line>
  <line no="431">
    <token name="T_COMMENT">|       `key` VARCHAR(40) NOT NULL DEFAULT '',</token>
  </line>
  <line no="432">
    <token name="T_COMMENT">|       `all_access` TINYINT(1) NOT NULL DEFAULT '0',</token>
  </line>
  <line no="433">
    <token name="T_COMMENT">|       `controller` VARCHAR(50) NOT NULL DEFAULT '',</token>
  </line>
  <line no="434">
    <token name="T_COMMENT">|       `date_created` DATETIME DEFAULT NULL,</token>
  </line>
  <line no="435">
    <token name="T_COMMENT">|       `date_modified` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,</token>
  </line>
  <line no="436">
    <token name="T_COMMENT">|       PRIMARY KEY (`id`)</token>
  </line>
  <line no="437">
    <token name="T_COMMENT">|    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;</token>
  </line>
  <line no="438">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="439">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="440">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'rest_enable_access'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">FALSE</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="441"/>
  <line no="442">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="443">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="444">
    <token name="T_COMMENT">| REST API Access Table Name</token>
  </line>
  <line no="445">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="446">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="447">
    <token name="T_COMMENT">| If not using the default table schema in 'rest_enable_access', specify the</token>
  </line>
  <line no="448">
    <token name="T_COMMENT">| table name to match e.g. my_access</token>
  </line>
  <line no="449">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="450">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="451">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'rest_access_table'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'access'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="452"/>
  <line no="453">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="454">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="455">
    <token name="T_COMMENT">| REST API Param Log Format</token>
  </line>
  <line no="456">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="457">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="458">
    <token name="T_COMMENT">| When set to TRUE, the REST API log parameters will be stored in the database as JSON</token>
  </line>
  <line no="459">
    <token name="T_COMMENT">| Set to FALSE to log as serialized PHP</token>
  </line>
  <line no="460">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="461">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="462">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'rest_logs_json_params'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">FALSE</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="463"/>
  <line no="464">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="465">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="466">
    <token name="T_COMMENT">| REST Enable Limits</token>
  </line>
  <line no="467">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="468">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="469">
    <token name="T_COMMENT">| When set to TRUE, the REST API will count the number of uses of each method</token>
  </line>
  <line no="470">
    <token name="T_COMMENT">| by an API key each hour. This is a general rule that can be overridden in the</token>
  </line>
  <line no="471">
    <token name="T_COMMENT">| $this-&gt;method array in each controller</token>
  </line>
  <line no="472">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="473">
    <token name="T_COMMENT">| Default table schema:</token>
  </line>
  <line no="474">
    <token name="T_COMMENT">|   CREATE TABLE `limits` (</token>
  </line>
  <line no="475">
    <token name="T_COMMENT">|       `id` INT(11) NOT NULL AUTO_INCREMENT,</token>
  </line>
  <line no="476">
    <token name="T_COMMENT">|       `uri` VARCHAR(255) NOT NULL,</token>
  </line>
  <line no="477">
    <token name="T_COMMENT">|       `count` INT(10) NOT NULL,</token>
  </line>
  <line no="478">
    <token name="T_COMMENT">|       `hour_started` INT(11) NOT NULL,</token>
  </line>
  <line no="479">
    <token name="T_COMMENT">|       `api_key` VARCHAR(40) NOT NULL,</token>
  </line>
  <line no="480">
    <token name="T_COMMENT">|       PRIMARY KEY (`id`)</token>
  </line>
  <line no="481">
    <token name="T_COMMENT">|   ) ENGINE=InnoDB DEFAULT CHARSET=utf8;</token>
  </line>
  <line no="482">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="483">
    <token name="T_COMMENT">| To specify the limits within the controller's __construct() method, add per-method</token>
  </line>
  <line no="484">
    <token name="T_COMMENT">| limits with:</token>
  </line>
  <line no="485">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="486">
    <token name="T_COMMENT">|       $this-&gt;method['METHOD_NAME']['limit'] = [NUM_REQUESTS_PER_HOUR];</token>
  </line>
  <line no="487">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="488">
    <token name="T_COMMENT">| See application/controllers/api/example.php for examples</token>
  </line>
  <line no="489">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="490">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'rest_enable_limits'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">FALSE</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="491"/>
  <line no="492">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="493">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="494">
    <token name="T_COMMENT">| REST API Limits Table Name</token>
  </line>
  <line no="495">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="496">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="497">
    <token name="T_COMMENT">| If not using the default table schema in 'rest_enable_limits', specify the</token>
  </line>
  <line no="498">
    <token name="T_COMMENT">| table name to match e.g. my_limits</token>
  </line>
  <line no="499">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="500">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="501">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'rest_limits_table'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'limits'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="502"/>
  <line no="503">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="504">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="505">
    <token name="T_COMMENT">| REST Ignore HTTP Accept</token>
  </line>
  <line no="506">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="507">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="508">
    <token name="T_COMMENT">| Set to TRUE to ignore the HTTP Accept and speed up each request a little.</token>
  </line>
  <line no="509">
    <token name="T_COMMENT">| Only do this if you are using the $this-&gt;rest_format or /format/xml in URLs</token>
  </line>
  <line no="510">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="511">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="512">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'rest_ignore_http_accept'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">FALSE</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="513"/>
  <line no="514">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="515">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="516">
    <token name="T_COMMENT">| REST AJAX Only</token>
  </line>
  <line no="517">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="518">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="519">
    <token name="T_COMMENT">| Set to TRUE to allow AJAX requests only. Set to FALSE to accept HTTP requests</token>
  </line>
  <line no="520">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="521">
    <token name="T_COMMENT">| Note: If set to TRUE and the request is not AJAX, a 505 response with the</token>
  </line>
  <line no="522">
    <token name="T_COMMENT">| error message 'Only AJAX requests are accepted.' will be returned.</token>
  </line>
  <line no="523">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="524">
    <token name="T_COMMENT">| Hint: This is good for production environments</token>
  </line>
  <line no="525">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="526">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="527">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'rest_ajax_only'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">FALSE</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="528"/>
  <line no="529">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="530">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="531">
    <token name="T_COMMENT">| REST Language File</token>
  </line>
  <line no="532">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="533">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="534">
    <token name="T_COMMENT">| Language file to load from the language directory</token>
  </line>
  <line no="535">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="536">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="537">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'rest_language'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'english'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="538"/>
  <line no="539">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="540">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="541">
    <token name="T_COMMENT">| CORS Check</token>
  </line>
  <line no="542">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="543">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="544">
    <token name="T_COMMENT">| Set to TRUE to enable Cross-Origin Resource Sharing (CORS). Useful if you</token>
  </line>
  <line no="545">
    <token name="T_COMMENT">| are hosting your API on a different domain from the application that</token>
  </line>
  <line no="546">
    <token name="T_COMMENT">| will access it through a browser</token>
  </line>
  <line no="547">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="548">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="549">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'check_cors'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">FALSE</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="550"/>
  <line no="551">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="552">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="553">
    <token name="T_COMMENT">| CORS Allowable Headers</token>
  </line>
  <line no="554">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="555">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="556">
    <token name="T_COMMENT">| If using CORS checks, set the allowable headers here</token>
  </line>
  <line no="557">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="558">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="559">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'allowed_cors_headers'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
  </line>
  <line no="560">
    <token name="T_WHITESPACE">  </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Origin'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="561">
    <token name="T_WHITESPACE">  </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'X-Requested-With'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="562">
    <token name="T_WHITESPACE">  </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Content-Type'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="563">
    <token name="T_WHITESPACE">  </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Accept'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="564">
    <token name="T_WHITESPACE">  </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Access-Control-Request-Method'</token>
  </line>
  <line no="565">
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="566"/>
  <line no="567">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="568">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="569">
    <token name="T_COMMENT">| CORS Allowable Methods</token>
  </line>
  <line no="570">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="571">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="572">
    <token name="T_COMMENT">| If using CORS checks, you can set the methods you want to be allowed</token>
  </line>
  <line no="573">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="574">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="575">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'allowed_cors_methods'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
  </line>
  <line no="576">
    <token name="T_WHITESPACE">  </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'GET'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="577">
    <token name="T_WHITESPACE">  </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'POST'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="578">
    <token name="T_WHITESPACE">  </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'OPTIONS'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="579">
    <token name="T_WHITESPACE">  </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'PUT'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="580">
    <token name="T_WHITESPACE">  </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'PATCH'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="581">
    <token name="T_WHITESPACE">  </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'DELETE'</token>
  </line>
  <line no="582">
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="583"/>
  <line no="584">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="585">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="586">
    <token name="T_COMMENT">| CORS Allow Any Domain</token>
  </line>
  <line no="587">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="588">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="589">
    <token name="T_COMMENT">| Set to TRUE to enable Cross-Origin Resource Sharing (CORS) from any</token>
  </line>
  <line no="590">
    <token name="T_COMMENT">| source domain</token>
  </line>
  <line no="591">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="592">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="593">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'allow_any_cors_domain'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">FALSE</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="594"/>
  <line no="595">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="596">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="597">
    <token name="T_COMMENT">| CORS Allowable Domains</token>
  </line>
  <line no="598">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="599">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="600">
    <token name="T_COMMENT">| Used if $config['check_cors'] is set to TRUE and $config['allow_any_cors_domain']</token>
  </line>
  <line no="601">
    <token name="T_COMMENT">| is set to FALSE. Set all the allowable domains within the array</token>
  </line>
  <line no="602">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="603">
    <token name="T_COMMENT">| e.g. $config['allowed_origins'] = ['http://www.example.com', 'https://spa.example.com']</token>
  </line>
  <line no="604">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="605">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="606">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'allowed_cors_origins'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="607"/>
  <line no="608">
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="609">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="610">
    <token name="T_COMMENT">| CORS Forced Headers</token>
  </line>
  <line no="611">
    <token name="T_COMMENT">|--------------------------------------------------------------------------</token>
  </line>
  <line no="612">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="613">
    <token name="T_COMMENT">| If using CORS checks, always include the headers and values specified here </token>
  </line>
  <line no="614">
    <token name="T_COMMENT">| in the OPTIONS client preflight.</token>
  </line>
  <line no="615">
    <token name="T_COMMENT">| Example:</token>
  </line>
  <line no="616">
    <token name="T_COMMENT">| $config['forced_cors_headers'] = [</token>
  </line>
  <line no="617">
    <token name="T_COMMENT">|   'Access-Control-Allow-Credentials' =&gt; 'true'</token>
  </line>
  <line no="618">
    <token name="T_COMMENT">| ];</token>
  </line>
  <line no="619">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="620">
    <token name="T_COMMENT">| Added because of how Sencha Ext JS framework requires the header</token>
  </line>
  <line no="621">
    <token name="T_COMMENT">| Access-Control-Allow-Credentials to be set to true to allow the use of</token>
  </line>
  <line no="622">
    <token name="T_COMMENT">| credentials in the REST Proxy. </token>
  </line>
  <line no="623">
    <token name="T_COMMENT">| See documentation here:</token>
  </line>
  <line no="624">
    <token name="T_COMMENT">| http://docs.sencha.com/extjs/6.5.2/classic/Ext.data.proxy.Rest.html#cfg-withCredentials</token>
  </line>
  <line no="625">
    <token name="T_COMMENT">|</token>
  </line>
  <line no="626">
    <token name="T_COMMENT">*/</token>
  </line>
  <line no="627">
    <token name="T_VARIABLE">$config</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'forced_cors_headers'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="628"/>
</source>
